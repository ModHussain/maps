
<html lang="en">
	<head>
		<title>HussainMaps</title>
		<meta charset="utf-8">
		<meta name="viewport" content="width=device-width, initial-scale=1">
		
		<style>
		<!--map-->
		#map_container{
  position: relative;
}
.map{
    height: 0;
    overflow: hidden;
    padding-bottom: 22.25%;
    padding-top: 30px;
    position: relative;
}
		</style>
	</head>
	<body>
	
    <script type="text/javascript" src="http://maps.googleapis.com/maps/api/js?sensor=false&libraries=places"></script>
 
 <script type="text/javascript">
        var source, destination;
        var directionsDisplay;
        var directionsService = new google.maps.DirectionsService();
        google.maps.event.addDomListener(window, 'load', function () {
            new google.maps.places.SearchBox(document.getElementById('txtSource'));
            new google.maps.places.SearchBox(document.getElementById('txtDestination'));
            directionsDisplay = new google.maps.DirectionsRenderer({ 'draggable': true });
        });

        function GetRoute() {
            var mumbai = new google.maps.LatLng(18.9750, 72.8258);
            var mapOptions = {
                zoom: 7,
                center: mumbai
            };
            map = new google.maps.Map(document.getElementById('dvMap'), mapOptions);
            directionsDisplay.setMap(map);
            directionsDisplay.setPanel(document.getElementById('dvPanel'));

            //*********DIRECTIONS AND ROUTE**********************//
            source = document.getElementById("txtSource").value;
            destination = document.getElementById("txtDestination").value;

            var request = {
                origin: source,
                destination: destination,
                travelMode: google.maps.TravelMode.DRIVING
            };
            directionsService.route(request, function (response, status) {
                if (status == google.maps.DirectionsStatus.OK) {
                    directionsDisplay.setDirections(response);
                }
            });

            //*********DISTANCE AND DURATION**********************//
            var service = new google.maps.DistanceMatrixService();
            service.getDistanceMatrix({
                origins: [source],
                destinations: [destination],
                travelMode: google.maps.TravelMode.DRIVING,
                unitSystem: google.maps.UnitSystem.METRIC,
                avoidHighways: false,
                avoidTolls: false
            }, function (response, status) {
                if (status == google.maps.DistanceMatrixStatus.OK && response.rows[0].elements[0].status != "ZERO_RESULTS") {
                    var distance = response.rows[0].elements[0].distance.text;
                    var duration = response.rows[0].elements[0].duration.text;
					var total =  Number(distance) * 2 ;
                    var dvDistance = document.getElementById("dvDistance");
                    dvDistance.innerHTML = "";
                    dvDistance.innerHTML += "Distance: " + distance  + "<br />";
                    dvDistance.innerHTML += "Duration:" + duration +"<br/>";
					
					
				} else {
                    alert("Unable to find the distance via road.");
                }
            });
        }
		
    </script>
	
	<!--<script>
	var source, destination;
var directionsDisplay;
var directionsService = new google.maps.DirectionsService();
google.maps.event.addDomListener(window, 'load', function() {
  new google.maps.places.SearchBox(document.getElementById('txtSource'));
  new google.maps.places.SearchBox(document.getElementById('txtDestination'));
  directionsDisplay = new google.maps.DirectionsRenderer({
    'draggable': true
  });
});

function calculateDistances() {
  var service = new google.maps.DistanceMatrixService();
  source = document.getElementById("txtSource").value;
  destination = document.getElementById("txtDestination").value;

  service.getDistanceMatrix({
    origins: [source],
    destinations: [destination],
    travelMode: google.maps.TravelMode.DRIVING,
    unitSystem: google.maps.UnitSystem.METRIC,
    avoidHighways: false,
    avoidTolls: false
  }, callback);
}

function callback(response, status) {
  if (status != google.maps.DistanceMatrixStatus.OK) {
    alert('Error was: ' + status);
  } else {
    var origins = response.originAddresses;
    var destinations = response.destinationAddresses;
    var outputDiv = document.getElementById('dvDistance');
    outputDiv.innerHTML = '';

    for (var i = 0; i < origins.length; i++) {
      var results = response.rows[i].elements;
      for (var j = 0; j < results.length; j++) {

        var distance = results[j].distance.text;
        var duration = results[j].duration.text;
        var dvDistance = document.getElementById("dvDistance");
        dvDistance.innerHTML = "";
        dvDistance.innerHTML += "Distance: " + distance + "<br />";

        dvDistance.innerHTML += "Fare: Rs " + (results[j].distance.value / 1000 * 2).toFixed(2) + "<br />";
        dvDistance.innerHTML += "Duration: " + duration;
      }
    }
  }
}
</script>-->
	<script>
	angular.module('test',[]).controller('personController', function ($scope) {    
     $scope.distance = 2;
     $scope.fare=2
 
     }); 
	</script>
	
	
   
                <h1>Source</h1>
						<form class="form-group">
							<input type="text" class="selectpicker" id="txtSource"  data-live-search="true" data-width="75%">
								
							<h1>Destination</h1>
							<input type="text" class="selectpicker" id="txtDestination"  data-live-search="true" data-width="75%">
								
							<input type="button" value="Get Route"  class="btn btn-success" onclick="GetRoute()" />
													</form>
						<p id="mal"></p>
						<div id="dvDistance"></div>
						<div id="dvMap" class="map" style="width: 1500px; height: 300px"></div>
						  <!--<div id="dvPanel" style="width: 500px; height: 500px">
							</div>-->
	<script>
		function mul()
		{
		var duration = response.rows[0].elements[0].duration.text;
		var y=2;
		var z = distance * y;
		document.getElementById("demo").innerHTML = z;
		}
		</script>
		<script>
		$( document ).ready( function() {

		$('body').noisy({
			intensity: 0.2,
			size: 200,
			opacity: 0.28,
			randomColors: false, // true by default
			color: '#000000'
		});
	  
		//Google Maps JS
		//Set Map
		function initialize() {
				var myLatlng = new google.maps.LatLng(53.3333,-3.08333);
				var imagePath = 'http://m.schuepfen.ch/icons/helveticons/black/60/Pin-location.png'
				var mapOptions = {
					zoom: 16,
					center: myLatlng,
					mapTypeId: google.maps.MapTypeId.ROADMAP
				}

			var map = new google.maps.Map(document.getElementById('map'), mapOptions);
			//Callout Content
			var contentString = 'Some address here..';
			//Set window width + content
			var infowindow = new google.maps.InfoWindow({
				content: contentString,
				maxWidth: 500
			});

			//Add Marker
			var marker = new google.maps.Marker({
				position: myLatlng,
				map: map,
				icon: imagePath,
				title: 'image title'
			});

			google.maps.event.addListener(marker, 'click', function() {
				infowindow.open(map,marker);
			});

			//Resize Function
			google.maps.event.addDomListener(window, "resize", function() {
				var center = map.getCenter();
				google.maps.event.trigger(map, "resize");
				map.setCenter(center);
			});
		}

		google.maps.event.addDomListener(window, 'load', initialize);

	});
	</script>


</body>
</html>
